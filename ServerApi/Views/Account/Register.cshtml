@model ServerApi.RegisterViewModel
@{
    var returnUrl = (string?)ViewData["ReturnUrl"] ?? "/connect/authorize";
}

<h2>Create your account</h2>

<form asp-action="Register" asp-controller="Account" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="returnUrl" value="@returnUrl" />
    <div>
        <label>Email</label>
        <input asp-for="Email" type="email" required />
        <span asp-validation-for="Email"></span>
    </div>
    <div>
        <label>Password</label>
        <input asp-for="Password" type="password" required />
        <span asp-validation-for="Password"></span>
    </div>
    <div>
        <label>Confirm Password</label>
        <input asp-for="ConfirmPassword" type="password" required />
        <span asp-validation-for="ConfirmPassword"></span>
    </div>
    <button type="submit">Create account</button>
</form>

<p>
    Already have an account?
    <a asp-action="Login" asp-route-returnUrl="@returnUrl">Sign in</a>
</p>

<hr />

<form action="/Account/External/Google" method="get">
    @Html.AntiForgeryToken()
    <input type="hidden" name="provider" value="Google" />
    <input type="hidden" name="returnUrl" value="@returnUrl" />
    <button type="submit">Continue with Google</button>
</form>

<form action="/Account/External/LinkedIn" method="get">
    @Html.AntiForgeryToken()
    <input type="hidden" name="provider" value="LinkedIn" />
    <input type="hidden" name="returnUrl" value="@returnUrl" />
    <button type="submit">Continue with LinkedIn</button>
</form>
